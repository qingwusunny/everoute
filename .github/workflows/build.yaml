name: build

on:
  push:
    tags:
      - "**"
    branches:
      - main
      - release-yaml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "IMAGE_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "IMAGE_TAG=latest" >> $GITHUB_ENV

      - run: echo "push image to everoute/release:${{ env.IMAGE_TAG }}"

      - uses: actions/checkout@v2

#      - uses: docker/setup-qemu-action@v2
#
#      - uses: docker/setup-buildx-action@v2
#
#      - uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_PUSH_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PUSH_TOKEN }}
#
#      - uses: docker/build-push-action@v2
#        with:
#          file: build/images/release/Dockerfile
#          tags: everoute/release:${{ env.IMAGE_TAG }}
#          platforms: linux/amd64,linux/arm64
#          push: true

      - name: check if tag is a release tag
        run: |
          if [[ ${{ github.ref }} =~ ^refs\/tags\/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then 
            echo "1"
            echo "NEED_RELEASE='true'" >> $GITHUB_ENV
          else 
            echo "2"
            echo "NEED_RELEASE='false'" >> $GITHUB_ENV
          fi
          echo ${{ env.NEED_RELEASE }}
          
          exists=$(curl -s -H "Accept: text/html" https://github.com/$GITHUB_REPOSITORY/releases/tag/${{ env.IMAGE_TAG }} -w %{http_code} -o /dev/null)
          echo $GITHUB_REPOSITORY
          echo $exists
          if $exists == 200; then 
            echo "release ${{ env.IMAGE_TAG }} has been exists"
            echo "NEED_RELEASE=false" >> $GITHUB_ENV;
          fi
          echo $exists

    outputs:
      ReleaseTag: ${{ env.IMAGE_TAG }}
      NeedRelease: ${{ env.NEED_RELEASE }}

  publish-release:
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ needs.build.outputs.NeedRelease == 'true' }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: generate deploy yaml
        run: helm template deploy/chart --include-crds --set image.tag=${{ needs.build.outputs.ReleaseTag }} > deploy/everoute.yaml

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: deploy/everoute.yaml
          name: ${{ needs.build.outputs.ReleaseTag }}
